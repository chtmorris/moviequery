// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  var MoviePanel, backgrounds, getRandomInt;

  this.movieApp = angular.module('movieApp', []);

  MoviePanel = (function() {
    function MoviePanel($scope, $http) {
      this.$scope = $scope;
      this.$http = $http;
      $scope.searchInput = "";
      $scope.dropDownInvisible = true;
      $scope.movieInfoInvisible = true;
      $scope.search = function() {
        var results, searchTerm;
        if ($scope.searchInput) {
          $scope.movieList = [];
          $scope.dropDownInvisible = true;
          searchTerm = $scope.searchInput;
          $http({
            url: "http://www.omdbapi.com/",
            method: "get",
            params: {
              s: searchTerm
            }
          }).success(function(data, status, headers, config) {
            console.log("data: " + data + "status: " + status + "headers:" + headers + "config: " + config);
            return results(data);
          }).error(function(data, status, headers, config) {
            return $scope.status = status;
          });
          return results = function(data) {
            var movie, _i, _len, _ref, _results;
            $scope.loadingGif = true;
            if (data.Response !== 'False') {
              $scope.movieList = [];
              $scope.dropDownInvisible = false;
              _ref = data["Search"];
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                movie = _ref[_i];
                _results.push($scope.movieList.push(movie));
              }
              return _results;
            }
          };
        }
      };
      $scope.searchPick = function($event, movie) {
        var imdbInfo;
        $scope.movieInfo = {};
        $scope.dropDownInvisible = true;
        $scope.movieInfoInvisible = false;
        $http({
          url: "http://www.omdbapi.com/",
          method: "get",
          params: {
            i: movie.imdbID
          }
        }).success(function(data, status, headers, config) {
          console.log("data: " + data + "status: " + status + "headers:" + headers + "config: " + config + "imdbID: " + movie.imdbID);
          return imdbInfo(data);
        }).error(function(data, status, headers, config) {
          return $scope.status = status;
        });
        return imdbInfo = function(data) {
          var info, key, _results;
          _results = [];
          for (key in data) {
            info = data[key];
            _results.push($scope.movieInfo[key] = info);
          }
          return _results;
        };
      };
    }

    return MoviePanel;

  })();

  MoviePanel.$inject = ["$scope", "$http"];

  movieApp.controller("MoviePanel", MoviePanel);

  backgrounds = [
    {
      image: "http://www.connorloughlin.com/images/background.jpg",
      subtitle: "Looking out at Carcassonne, France - August 2013"
    }, {
      image: "http://upload.wikimedia.org/wikipedia/commons/1/13/1632x1224_sertaoe_2_rio_grande_do_norte_landscape_panorama_brasil.jpg",
      subtitle: "Version 2"
    }, {
      image: "http://upload.wikimedia.org/wikipedia/commons/7/71/1632x1224_sertaoe_rio_grande_do_norte_landscape_panorama_brasil.jpg",
      subtitle: "Version 3"
    }
  ];

  getRandomInt = function(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  };

  $(document).ready(function() {
    var bgNumber;
    return bgNumber = getRandomInt(0, backgrounds.length - 1);
  });

}).call(this);

//# sourceMappingURL=moviequery.map
